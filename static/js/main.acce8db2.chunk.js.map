{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","username","className","alt","src","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","json","data","console","log","this","filterMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTACaA,G,kBAAO,SAACC,GAAW,IACtBC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACzB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BL,EAA1B,4BAEL,6BAAcD,GAALC,GACT,6BAAKE,IACL,4BAAID,SCTGK,EAAW,SAACR,GACvB,OACE,qBAAKK,UAAU,YAAf,SACGL,EAAMS,SAASC,KAAI,gBAAGT,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,OAClB,cAAC,EAAD,CAAMH,KAAMA,EAAMC,GAAIA,EAAIC,MAAOA,EAAOC,SAAUA,UCL7CO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACER,UAAU,SACVS,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCDG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,gMAcJI,MAAM,8C,8BACZC,O,OAFIC,E,OAGNC,QAAQC,IAAIF,GACZG,KAAKV,SAAS,CAAET,SAAUgB,I,qIAGlB,IAAD,EAC2BG,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAiBpB,EAASqB,QAAO,SAACC,GAAD,OACrCA,EAAQ9B,KAAK+B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEO,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acce8db2.chunk.js","sourcesContent":["import \"./card.styles.css\";\r\nexport const Card = (props) => {\r\n  const { name, id, email, username } = props;\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n      />\r\n      <h2 key={id}>{name}</h2>\r\n      <h2>{username}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map(({ name, id, email, username }) => (\r\n        <Card name={name} id={id} email={email} username={username} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import \"./search-box.styles.css\";\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  async componentDidMount() {\n    const data = await (\n      await fetch(\"https://jsonplaceholder.typicode.com/users\")\n    ).json();\n    console.log(data);\n    this.setState({ monsters: data });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}